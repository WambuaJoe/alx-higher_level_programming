''0-add_integer'' module
========================

Using ''add_integer''
_____________________

Importing function from module:
    >>> add_integer = __import__('0-add_integer').add_integer

Adding 1 and 2
    >>> add_integer(1, 2)
    3

Subtracting 2 from 100
    >>> add_integer(100, -2)
    98

Adding float to an integer
    >>> add_integer(2.5, 98)
    100

Add integer to a float
    >>> add_integer(3, 3.3)
    6

Add 2 float numbers
    >>> add_integer(4.5, 5,5)
    9

Subtracting 1 from 98
    >>> add_integer(-1)
    97

Add an integer to a string
    >>> add_integer(5, 'joe')
    Traceback (most recent call last):
        ---
    TypeError: b must be an integer

Passing no value
    >>> add_integer()
    Traceback (most recent call last):
        ---
    TypeError: add_integer() missing 1 required positional argument: 'a'

Passing None
    >>> add_integer(None)
    Traceback (most recent call last):
        ---
    TypeError: a must be an integer

Adding a single character to a number
    >>> add_integer('a', 4)
    Traceback (most recent call last):
        ---
    TypeError: a must be an integer

Add two string values
    >>> add_integer('b', 'c')
    Traceback (most recent call last):
        ---
    TypeError: a must be an integer

Add a number an a list
    >>> add_integer(5, [2, 3])
    Traceback (most recent call last):
        ---
    TypeError: b must be an integer

Passing a string
    >>> add_integer('Holberton')
    Traceback (most recent call last):
        ---
    TypeError: a must be an integer

Add a tuple
    >>> add_integer((3, 5))
    Traceback (most recent call last):
        ---
    TypeError: a must be an integer

Dealing with Nan
    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
        ---
    OverflowError: cannot convert float infinity to integer

Dealing overflow
    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
        ---
    OverflowError: cannot convert float infinity to integer